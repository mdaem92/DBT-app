[{"D:\\React Workspace\\dbt-app\\src\\pages\\JournalsPage\\JournalsPage.component.jsx":"1","D:\\React Workspace\\dbt-app\\src\\Routers\\PrivateRouter.component.jsx":"2","D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.utils.js":"3","D:\\React Workspace\\dbt-app\\src\\components\\Journal\\Journal.component.jsx":"4","D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.sagas.js":"5","D:\\React Workspace\\dbt-app\\src\\index.js":"6","D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.component.jsx":"7","D:\\React Workspace\\dbt-app\\src\\Redux\\form\\form.actions.js":"8","D:\\React Workspace\\dbt-app\\src\\components\\HomepageTabs\\HomepageTabs.styles.jsx":"9","D:\\React Workspace\\dbt-app\\src\\components\\DeadlineCountdown\\DeadlineCountdown.styles.jsx":"10","D:\\React Workspace\\dbt-app\\src\\components\\Responsive-Chart\\ResponsiveChart.jsx":"11","D:\\React Workspace\\dbt-app\\src\\components\\DeadlineCountdown\\DeadlineCountdown.component.jsx":"12","D:\\React Workspace\\dbt-app\\src\\components\\Journal\\Journal.styles.jsx":"13","D:\\React Workspace\\dbt-app\\src\\hooks\\useCurrentTime.js":"14","D:\\React Workspace\\dbt-app\\src\\components\\Date-Time\\DateAndTime.component.jsx":"15","D:\\React Workspace\\dbt-app\\src\\pages\\JournalsPage\\JournalsPage.styles.jsx":"16","D:\\React Workspace\\dbt-app\\src\\App.js":"17","D:\\React Workspace\\dbt-app\\src\\components\\Username-averages\\UserNameAvgs.styles.jsx":"18","D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.styles.jsx":"19","D:\\React Workspace\\dbt-app\\src\\components\\Time\\Time.component.jsx":"20","D:\\React Workspace\\dbt-app\\src\\components\\HomepageTabs\\HomepageTabs.component.jsx":"21"},{"size":2867,"mtime":1613078590470,"results":"22","hashOfConfig":"23"},{"size":705,"mtime":1612555909116,"results":"24","hashOfConfig":"23"},{"size":932,"mtime":1612559045664,"results":"25","hashOfConfig":"23"},{"size":237,"mtime":1612559797070,"results":"26","hashOfConfig":"23"},{"size":2109,"mtime":1612557284331,"results":"27","hashOfConfig":"23"},{"size":717,"mtime":1611061403431,"results":"28","hashOfConfig":"23"},{"size":6747,"mtime":1612474361981,"results":"29","hashOfConfig":"23"},{"size":236,"mtime":1609908529280,"results":"30","hashOfConfig":"23"},{"size":386,"mtime":1612552693465,"results":"31","hashOfConfig":"23"},{"size":390,"mtime":1610696233827,"results":"32","hashOfConfig":"23"},{"size":3585,"mtime":1612551762135,"results":"33","hashOfConfig":"23"},{"size":1868,"mtime":1610696106919,"results":"34","hashOfConfig":"23"},{"size":158,"mtime":1613077441760,"results":"35","hashOfConfig":"23"},{"size":361,"mtime":1610394732940,"results":"36","hashOfConfig":"23"},{"size":691,"mtime":1612544180325,"results":"37","hashOfConfig":"23"},{"size":592,"mtime":1613078872353,"results":"38","hashOfConfig":"23"},{"size":302,"mtime":1612544259086,"results":"39","hashOfConfig":"23"},{"size":696,"mtime":1609926390414,"results":"40","hashOfConfig":"23"},{"size":796,"mtime":1611514141116,"results":"41","hashOfConfig":"23"},{"size":366,"mtime":1610402708181,"results":"42","hashOfConfig":"23"},{"size":1541,"mtime":1612553820032,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ca44ja",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React Workspace\\dbt-app\\src\\pages\\JournalsPage\\JournalsPage.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\Routers\\PrivateRouter.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.utils.js",["89"],"D:\\React Workspace\\dbt-app\\src\\components\\Journal\\Journal.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.sagas.js",[],"D:\\React Workspace\\dbt-app\\src\\index.js",[],["90","91"],"D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.component.jsx",["92","93"],"import React, { useEffect } from 'react'\r\nimport { Button } from 'antd'\r\nimport { useState } from 'react'\r\nimport { FormContainer, ItemContainer, RowContainer } from './AddJournalForm.styles'\r\nimport { Input, Select, Switch, Form, InputNumber, DatePicker } from 'antd'\r\nimport { FiSun, FiMoon } from \"react-icons/fi\";\r\nimport { connect } from 'react-redux'\r\nimport { submitJournalStart } from '../../Redux/journals/journals.actions'\r\nimport useCurrentTime from '../../hooks/useCurrentTime'\r\nimport { setFieldValue } from '../../Redux/form/form.actions'\r\nimport useCurrentUser from '../../hooks/useCurrentUser'\r\n\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nconst AddJournalForm = ({ submit, setFieldValue }) => {\r\n\r\n    const [state, setState] = useState({\r\n        date: undefined,\r\n        isDeadlineMissed: false,\r\n        // lastNightSummary: '',\r\n        // goalDescription: '',\r\n        isMorningReport: true,\r\n        // mood: undefined,\r\n        // tension: undefined,\r\n        // selfEsteemReport: '',\r\n        // positiveReport: '',\r\n        // additionalNotes: ''\r\n    })\r\n    useEffect(() => {\r\n        console.log(\"state updated: \", state);\r\n\r\n    }, [state])\r\n\r\n\r\n    const user = useCurrentUser()\r\n    const { isMorningReport } = state\r\n    const currentDate = useCurrentTime()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        const { uid, displayName } = user\r\n        console.log('Success:', values);\r\n        submit({ ...values, uid, displayName, isMorningReport })\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n\r\n    };\r\n    const preventSubmitOnEnter = (e) => {\r\n        if (e.code === \"Enter\" || e.code === 'NumpadEnter') {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    const storeDataOnBlur = ({ target: { id, value } }) => {\r\n        console.log(id);\r\n        console.log(value);\r\n        console.log(`going to store  on blur`);\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        // onKeyDown={preventSubmitOnEnter}\r\n\r\n        >\r\n            <RowContainer>\r\n                <Switch\r\n                    checkedChildren={<FiSun />}\r\n                    unCheckedChildren={<FiMoon />}\r\n                    checked={state.isMorningReport}\r\n                    onChange={(val) => setState({ ...state, isMorningReport: val })}\r\n                    className={'switch'}\r\n                />\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Date is required' }]}\r\n                    name={'date'}\r\n                    initialValue={currentDate}\r\n                >\r\n                    <DatePicker showNow />\r\n                </Form.Item>\r\n            </RowContainer>\r\n\r\n            {\r\n                isMorningReport &&\r\n\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Last night summary is required' }]}\r\n                    name={'lastNightSummary'}\r\n                >\r\n                    <TextArea placeholder={'Last night\\'s summary'} autoSize allowClear onBlur={storeDataOnBlur} />\r\n                </Form.Item>\r\n\r\n\r\n            }\r\n\r\n            {\r\n                isMorningReport ?\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Today\\'s goal is required' }]}\r\n                    name={'todaysGoal'}\r\n                >\r\n                    <TextArea placeholder={'Today\\'s goal'} autoSize onBlur={storeDataOnBlur} />\r\n                </Form.Item>\r\n                :\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Goal description is required' }]}\r\n                    name={'goalDescription'}\r\n                >\r\n                    <TextArea placeholder={'Today\\' goal overview'} autoSize onBlur={storeDataOnBlur} />\r\n                </Form.Item>\r\n            }\r\n\r\n            \r\n\r\n            <Form.Item\r\n                rules={[{ required: true, message: 'Mood is required' }]}\r\n                name={isMorningReport ? 'mood' : 'mood2'}\r\n            >\r\n                <Select placeholder={'Mood'} onBlur={storeDataOnBlur}>\r\n                    <Option value=\"2\">++</Option>\r\n                    <Option value=\"1\">+</Option>\r\n                    <Option value=\"0\">+-</Option>\r\n                    <Option value=\"-1\">-</Option>\r\n                    <Option value=\"-2\">--</Option>\r\n                </Select>\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                rules={[{ required: true, message: 'Tension is required' }]}\r\n                name={isMorningReport ? 'tension' : 'tension2'}\r\n            >\r\n                <InputNumber min={0} max={100} placeholder={'Tension'} onBlur={storeDataOnBlur} />\r\n            </Form.Item>\r\n\r\n\r\n            {\r\n                !state.isMorningReport &&\r\n\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Positive notes is required' }]}\r\n                    name={'positiveReport'}\r\n                >\r\n                    <TextArea placeholder={'positive Notes'} autoSize onBlur={storeDataOnBlur} />\r\n                </Form.Item>\r\n\r\n            }\r\n            {\r\n                !state.isMorningReport &&\r\n\r\n                <Form.Item\r\n                    rules={[{ required: true, message: 'Positive notes is required' }]}\r\n                    name={'selfEsteemReport'}\r\n                >\r\n                    <TextArea placeholder={'Self-esteem report'} autoSize onBlur={storeDataOnBlur} />\r\n                </Form.Item>\r\n\r\n            }\r\n\r\n\r\n            {\r\n                isMorningReport ?\r\n                    <Form.Item\r\n                        rules={[{ required: false }]}\r\n                        name={'additionalNotesMorning'}\r\n                    >\r\n                        <TextArea placeholder={'Additional notes'} autoSize onBlur={storeDataOnBlur} />\r\n                    </Form.Item>\r\n                    :\r\n                    <Form.Item\r\n                        rules={[{ required: false }]}\r\n                        name={'additionalNotesEvening'}\r\n                    >\r\n                        <TextArea placeholder={'Additional notes'} autoSize onBlur={storeDataOnBlur} />\r\n                    </Form.Item>\r\n            }\r\n\r\n\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" >\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    submit: (journal) => dispatch(submitJournalStart(journal)),\r\n    setFieldValue: (name, value) => dispatch(setFieldValue(name, value))\r\n})\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddJournalForm)\r\n",["94","95"],"D:\\React Workspace\\dbt-app\\src\\Redux\\form\\form.actions.js",[],"D:\\React Workspace\\dbt-app\\src\\components\\HomepageTabs\\HomepageTabs.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\DeadlineCountdown\\DeadlineCountdown.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Responsive-Chart\\ResponsiveChart.jsx",["96","97","98"],"D:\\React Workspace\\dbt-app\\src\\components\\DeadlineCountdown\\DeadlineCountdown.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Journal\\Journal.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\hooks\\useCurrentTime.js",[],"D:\\React Workspace\\dbt-app\\src\\components\\Date-Time\\DateAndTime.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\pages\\JournalsPage\\JournalsPage.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\App.js",[],"D:\\React Workspace\\dbt-app\\src\\components\\Username-averages\\UserNameAvgs.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Time\\Time.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\HomepageTabs\\HomepageTabs.component.jsx",["99","100","101"],{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":14},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"110","line":4,"column":25,"nodeType":"104","messageId":"105","endLine":4,"endColumn":38},{"ruleId":"102","severity":1,"message":"111","line":52,"column":11,"nodeType":"104","messageId":"105","endLine":52,"endColumn":31},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"102","severity":1,"message":"114","line":6,"column":21,"nodeType":"104","messageId":"105","endLine":6,"endColumn":45},{"ruleId":"102","severity":1,"message":"115","line":13,"column":9,"nodeType":"104","messageId":"105","endLine":13,"endColumn":15},{"ruleId":"102","severity":1,"message":"116","line":46,"column":11,"nodeType":"104","messageId":"105","endLine":46,"endColumn":32},{"ruleId":"102","severity":1,"message":"117","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"118","line":6,"column":76,"nodeType":"104","messageId":"105","endLine":6,"endColumn":92},{"ruleId":"102","severity":1,"message":"119","line":10,"column":9,"nodeType":"104","messageId":"105","endLine":10,"endColumn":16},"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'ItemContainer' is defined but never used.","'preventSubmitOnEnter' is assigned a value but never used.",["120"],["121"],"'ChartPaginationContainer' is defined but never used.","'Option' is assigned a value but never used.","'handleEntriesPerChart' is assigned a value but never used.","'moodsSelector' is defined but never used.","'tensionsSelector' is defined but never used.","'TabPane' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]