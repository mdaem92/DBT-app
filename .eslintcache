[{"D:\\React Workspace\\dbt-app\\src\\components\\TagsDisplay\\TagsDisplay.component.jsx":"1","D:\\React Workspace\\dbt-app\\src\\components\\TagsDisplay\\TagsDisplay.styles.jsx":"2","D:\\React Workspace\\dbt-app\\src\\components\\TagsSelect\\TagsSelect.styles.js":"3","D:\\React Workspace\\dbt-app\\src\\Redux\\rootReducer.js":"4","D:\\React Workspace\\dbt-app\\src\\pages\\Homepage\\Homepage.component.jsx":"5","D:\\React Workspace\\dbt-app\\src\\components\\user-search-select\\user-search-select.component.jsx":"6","D:\\React Workspace\\dbt-app\\src\\Redux\\notifications\\notifications.sagas.js":"7","D:\\React Workspace\\dbt-app\\src\\Redux\\user\\user.selectors.js":"8","D:\\React Workspace\\dbt-app\\src\\components\\User-profile\\UserProfile.component.jsx":"9","D:\\React Workspace\\dbt-app\\src\\Redux\\store.js":"10","D:\\React Workspace\\dbt-app\\src\\pages\\GoogleLogInpage\\GoogleLogIn.styles.jsx":"11","D:\\React Workspace\\dbt-app\\src\\components\\TagsSelect\\TagsSelect.component.jsx":"12","D:\\React Workspace\\dbt-app\\src\\components\\Responsive-Chart\\ResponsiveChart.styles.jsx":"13","D:\\React Workspace\\dbt-app\\src\\components\\Notification\\Notification.styles.jsx":"14","D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.component.jsx":"15","D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.sagas.js":"16","D:\\React Workspace\\dbt-app\\src\\components\\Journal-Modal-Tabs-Content\\JournalModalTabsContent.component.jsx":"17","D:\\React Workspace\\dbt-app\\src\\components\\Journal-Modal-Tabs\\JournalModalTabs.component.jsx":"18","D:\\React Workspace\\dbt-app\\src\\index.js":"19","D:\\React Workspace\\dbt-app\\src\\Routers\\AppRouter.component.jsx":"20","D:\\React Workspace\\dbt-app\\src\\components\\Paragraph\\Paragraph.styles.jsx":"21","D:\\React Workspace\\dbt-app\\src\\components\\Deadline-Switch-setting\\DeadlineSwitchSetting.component.jsx":"22","D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.styles.jsx":"23","D:\\React Workspace\\dbt-app\\src\\components\\Notification\\Notification.component.jsx":"24"},{"size":350,"mtime":1630273057543,"results":"25","hashOfConfig":"26"},{"size":469,"mtime":1630273646975,"results":"27","hashOfConfig":"26"},{"size":512,"mtime":1630273506388,"results":"28","hashOfConfig":"26"},{"size":753,"mtime":1630273922729,"results":"29","hashOfConfig":"26"},{"size":2738,"mtime":1630274065703,"results":"30","hashOfConfig":"26"},{"size":1886,"mtime":1630274423398,"results":"31","hashOfConfig":"26"},{"size":4652,"mtime":1630274208626,"results":"32","hashOfConfig":"26"},{"size":980,"mtime":1630274592670,"results":"33","hashOfConfig":"26"},{"size":8611,"mtime":1630274726184,"results":"34","hashOfConfig":"26"},{"size":1101,"mtime":1628601859359,"results":"35","hashOfConfig":"26"},{"size":492,"mtime":1611863296047,"results":"36","hashOfConfig":"26"},{"size":1915,"mtime":1630187991574,"results":"37","hashOfConfig":"26"},{"size":277,"mtime":1612552885709,"results":"38","hashOfConfig":"26"},{"size":764,"mtime":1623007224544,"results":"39","hashOfConfig":"26"},{"size":11429,"mtime":1630279546121,"results":"40","hashOfConfig":"26"},{"size":2379,"mtime":1630277277075,"results":"41","hashOfConfig":"26"},{"size":1243,"mtime":1630277738648,"results":"42","hashOfConfig":"26"},{"size":2212,"mtime":1630277715838,"results":"43","hashOfConfig":"26"},{"size":718,"mtime":1618510920609,"results":"44","hashOfConfig":"26"},{"size":2114,"mtime":1626900141063,"results":"45","hashOfConfig":"26"},{"size":224,"mtime":1613676214860,"results":"46","hashOfConfig":"26"},{"size":3107,"mtime":1630278535433,"results":"47","hashOfConfig":"26"},{"size":1310,"mtime":1630279273639,"results":"48","hashOfConfig":"26"},{"size":5214,"mtime":1630281981862,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ca44ja",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Workspace\\dbt-app\\src\\components\\TagsDisplay\\TagsDisplay.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\TagsDisplay\\TagsDisplay.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\TagsSelect\\TagsSelect.styles.js",[],"D:\\React Workspace\\dbt-app\\src\\Redux\\rootReducer.js",["103"],"import {combineReducers} from 'redux'\r\nimport formReducer from './form/form.reducer'\r\nimport journalsReducer from './journals/journals.reducer'\r\nimport membersReducer from './members/members.reducer'\r\nimport notificationsReducer from './notifications/notifications.reducer'\r\nimport UserReducer from './user/user.reducer'\r\nimport friendsOverviewPageReducer from './friendOverviewPage/friendOverviewPage.reducer'\r\nimport paginationReducer from './pagination/pagination.reducer'\r\n\r\nexport default combineReducers({\r\n    journals:journalsReducer,\r\n    form:formReducer,\r\n    auth:UserReducer,\r\n    // members:membersReducer,\r\n    notification:notificationsReducer,\r\n    friendsOverviewPage:friendsOverviewPageReducer,\r\n    pagination:paginationReducer\r\n\r\n})",["104","105"],"D:\\React Workspace\\dbt-app\\src\\pages\\Homepage\\Homepage.component.jsx",["106"],"import React, { useEffect } from 'react'\r\nimport { Container, DateAndTimeContainer, TabsContainer, UserNameAvgsContainer } from './Homepage.styles'\r\nimport UserNameAvgs from '../../components/Username-averages/UserNameAvgs.component'\r\nimport DateAndTime from '../../components/Date-Time/DateAndTime.component'\r\nimport HomepageTabs from '../../components/HomepageTabs/HomepageTabs.component'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { fetchJournalsStart } from '../../Redux/journals/journals.actions'\r\nimport { isJournalsFetchedSelector } from '../../Redux/journals/journals.selectors'\r\nimport { currentUserSelector } from '../../Redux/user/user.selectors'\r\nimport { isMembersFetchedSelector } from '../../Redux/members/members.selectors'\r\nimport { isNotificationsFetchedSelector, notificationsSelector } from '../../Redux/notifications/notifications.selectors'\r\nimport { setCurrentNotifications } from '../../Redux/notifications/notifications.actions'\r\n\r\n\r\nconst Homepage = ({\r\n    fetchJournals,\r\n    isJournalsFetched,\r\n    currentUser,\r\n    // isMembersFetched,\r\n    // fetchMembers,\r\n    isNotificationsFetched,\r\n    // fetchNotifications,\r\n    notifications: currentNotifications,\r\n    setCurrentNotifications\r\n}) => {\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isJournalsFetched && !!currentUser) {\r\n            console.log(`journals are not fetched: `, isJournalsFetched);\r\n            fetchJournals(currentUser.uid)\r\n        }\r\n    }, [isJournalsFetched, fetchJournals, currentUser])\r\n\r\n    // throw Error;\r\n    return (\r\n\r\n        <Container>\r\n            <UserNameAvgsContainer>\r\n                <UserNameAvgs />\r\n            </UserNameAvgsContainer>\r\n            <DateAndTimeContainer>\r\n                <DateAndTime />\r\n            </DateAndTimeContainer>\r\n            {/* <div>{notifications}</div> */}\r\n            <TabsContainer>\r\n                <HomepageTabs />\r\n            </TabsContainer>\r\n        </Container>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToprops = createStructuredSelector({\r\n    isJournalsFetched: isJournalsFetchedSelector,\r\n    currentUser: currentUserSelector,\r\n    // isMembersFetched: isMembersFetchedSelector,\r\n    isNotificationsFetched: isNotificationsFetchedSelector,\r\n    notifications: notificationsSelector\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchJournals: (uid) => dispatch(fetchJournalsStart(uid)),\r\n    // fetchMembers: () => dispatch(fetchMembersStart()),\r\n    // fetchNotifications: (uid) => dispatch(fetchNotificationsStart(uid)),\r\n    setCurrentNotifications: (newNotifications) => dispatch(setCurrentNotifications(newNotifications)),\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(Homepage)\r\n","D:\\React Workspace\\dbt-app\\src\\components\\user-search-select\\user-search-select.component.jsx",["107","108","109"],"D:\\React Workspace\\dbt-app\\src\\Redux\\notifications\\notifications.sagas.js",["110","111","112","113"],"import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { firestore, Timestamp,auth } from \"../../firebase/firebase.utils\";\r\nimport { fetchNotificationsFailure, fetchNotificationsSuccess, notifyFriendsFailure, notifyFriendsSuccess, removeNotificationsFailure, removeNotificationsSuccess, sendRequestFailure, sendRequestStart, sendRequestSuccess } from \"./notifications.actions\";\r\nimport NotificationsActionTypes from './notifications.types'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\n// const getNotificationsFromSnapshot = (snapshot)=>{\r\n//     return snapshot.docs.map((notification)=>{\r\n//         const notifData = notification.data()\r\n//         // console.log(\"got member data: \",userData);\r\n//         return notifData\r\n//     })\r\n// }\r\n\r\nconst getUsersIdsFromSnapshot = (snapshot)=>{\r\n    return snapshot.docs.map((user)=>{\r\n        const {uid} = user.data()\r\n        return uid\r\n    })\r\n}\r\n\r\nconst getFriendsFromSnapshot = (snapshot)=>{\r\n    return snapshot.docs.map((friend)=>{\r\n        const friendData = friend.data()\r\n        return friendData\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction* sendRequestAsync({sender,receiverId,requestType}){\r\n    \r\n    try {\r\n        yield console.log('sender id : ',sender)\r\n        yield console.log('receiver id : ',receiverId)\r\n        yield console.log('request type: ',requestType);\r\n        const collectionRef = firestore.collection(`users/${receiverId}/notifications`)\r\n        const usersCollectionRef = yield firestore.collection('users')\r\n        const usersCollectionSnapshot = yield usersCollectionRef.get()\r\n        const uids = yield call(getUsersIdsFromSnapshot,usersCollectionSnapshot)\r\n        const {uid,displayName,...rest} = sender\r\n        if(uids.indexOf(receiverId)>=0){\r\n            const notification = {\r\n                ...rest,\r\n                type:requestType,\r\n                responded:false,\r\n                senderId:uid,\r\n                senderName:displayName\r\n                // date:now\r\n            }\r\n            yield collectionRef.add(notification)\r\n            yield put(sendRequestSuccess(notification))\r\n        }else{\r\n            throw new Error(\"User with the given id does not exist\")\r\n        }\r\n\r\n        \r\n    } catch (error) {\r\n        yield put(sendRequestFailure(error.message))\r\n    }\r\n}\r\n\r\nfunction* removeNotificationAsync({uid,notifID}){\r\n    try {\r\n\r\n        const docRef = yield firestore\r\n            .collection('users')\r\n            .doc(`${uid}`)\r\n            .collection('notifications')\r\n            .doc(`${notifID}`)\r\n        yield console.log();\r\n        console.log('removing notif with id:',notifID);\r\n        yield docRef.delete()\r\n\r\n        yield put(removeNotificationsSuccess(notifID))\r\n        \r\n    } catch (error) {\r\n        yield put(removeNotificationsFailure(error.message))\r\n    }\r\n}\r\n\r\nfunction* notifyFriendsAsync({notifType}){\r\n    console.log('notifying users');\r\n    try {\r\n        const uid = yield auth.currentUser.uid\r\n        yield console.log('url: ',auth.currentUser.photoURL);\r\n        const friendsListRef = yield firestore.collection(`users/${uid}/friends`)\r\n        const friendsListSnapshot = yield friendsListRef.get()\r\n        console.log('friends snapshot: ',friendsListSnapshot , uid);\r\n        console.log(friendsListSnapshot.exists);\r\n        \r\n        const friendsList = yield getFriendsFromSnapshot(friendsListSnapshot)\r\n        console.log('friends list: ',friendsList);\r\n\r\n        for (var friend of friendsList) {\r\n            console.log('notifying friend: ',friend);\r\n            const sender = {uid:auth.currentUser.uid,photoURL:auth.currentUser.photoURL,displayName:auth.currentUser.displayName}\r\n            console.log('auth current sender: ',sender);\r\n            yield put(sendRequestStart(sender,friend.id,notifType))\r\n        }\r\n        yield put(notifyFriendsSuccess())\r\n        \r\n        \r\n    } catch (error) {\r\n        yield put(notifyFriendsFailure(error.message))\r\n    }\r\n}\r\n\r\n\r\nfunction* onSendRequestStart(){\r\n    yield takeLatest(\r\n        NotificationsActionTypes.SEND_REQUEST_START,\r\n        sendRequestAsync\r\n    )\r\n}\r\n\r\nfunction* onRemoveNotificationStart(){\r\n    yield takeLatest(\r\n        NotificationsActionTypes.REMOVE_NOTIFICATION_START,\r\n        removeNotificationAsync\r\n    )\r\n}\r\n\r\nfunction* onNotifyFriendsStart(){\r\n    yield takeLatest(\r\n        NotificationsActionTypes.NOTIFY_FRIENDS_START,\r\n        notifyFriendsAsync\r\n    )\r\n}\r\n\r\nexport function* notificationsSaga(){\r\n    yield all([\r\n        // call(onFetchNotificationsStart),\r\n        call(onSendRequestStart),\r\n        call(onRemoveNotificationStart),\r\n        call(onNotifyFriendsStart)\r\n    ])\r\n}\r\n\r\n\r\n\r\n",["114","115"],"D:\\React Workspace\\dbt-app\\src\\Redux\\user\\user.selectors.js",[],"D:\\React Workspace\\dbt-app\\src\\components\\User-profile\\UserProfile.component.jsx",["116"],"D:\\React Workspace\\dbt-app\\src\\Redux\\store.js",[],"D:\\React Workspace\\dbt-app\\src\\pages\\GoogleLogInpage\\GoogleLogIn.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\TagsSelect\\TagsSelect.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Responsive-Chart\\ResponsiveChart.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Notification\\Notification.styles.jsx",["117"],"D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.component.jsx",["118","119"],"D:\\React Workspace\\dbt-app\\src\\Redux\\journals\\journals.sagas.js",[],"D:\\React Workspace\\dbt-app\\src\\components\\Journal-Modal-Tabs-Content\\JournalModalTabsContent.component.jsx",["120"],"D:\\React Workspace\\dbt-app\\src\\components\\Journal-Modal-Tabs\\JournalModalTabs.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\index.js",[],"D:\\React Workspace\\dbt-app\\src\\Routers\\AppRouter.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Paragraph\\Paragraph.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Deadline-Switch-setting\\DeadlineSwitchSetting.component.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\AddJournalForm\\AddJournalForm.styles.jsx",[],"D:\\React Workspace\\dbt-app\\src\\components\\Notification\\Notification.component.jsx",[],{"ruleId":"121","severity":1,"message":"122","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":22},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"129","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":34},{"ruleId":"121","severity":1,"message":"130","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"132","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":16},{"ruleId":"121","severity":1,"message":"133","line":2,"column":21,"nodeType":"123","messageId":"124","endLine":2,"endColumn":30},{"ruleId":"121","severity":1,"message":"134","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":35},{"ruleId":"121","severity":1,"message":"135","line":3,"column":37,"nodeType":"123","messageId":"124","endLine":3,"endColumn":62},{"ruleId":"121","severity":1,"message":"136","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":88,"column":8,"nodeType":"141","endLine":88,"endColumn":10,"suggestions":"142"},{"ruleId":"121","severity":1,"message":"143","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":19},{"ruleId":"121","severity":1,"message":"144","line":91,"column":11,"nodeType":"123","messageId":"124","endLine":91,"endColumn":22},{"ruleId":"121","severity":1,"message":"145","line":106,"column":11,"nodeType":"123","messageId":"124","endLine":106,"endColumn":28},{"ruleId":"121","severity":1,"message":"146","line":2,"column":40,"nodeType":"123","messageId":"124","endLine":2,"endColumn":54},"no-unused-vars","'membersReducer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'isMembersFetchedSelector' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Select' is defined but never used.","'Timestamp' is defined but never used.","'fetchNotificationsFailure' is defined but never used.","'fetchNotificationsSuccess' is defined but never used.","'moment' is defined but never used.",["147"],["148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'friendDateFrom', 'friendDateTo', 'match.path', 'ownFilters.dateFrom', and 'ownFilters.dateTo'. Either include them or remove the dependency array. If 'setDateRange' needs the current value of 'friendDateFrom', you can also switch to useReducer instead of useState and read 'friendDateFrom' in the reducer.","ArrayExpression",["149"],"'css' is defined but never used.","'handleClear' is assigned a value but never used.","'formatMoodOptions' is assigned a value but never used.","'TitleContainer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [friendDateFrom, friendDateTo, match.path, ownFilters.dateFrom, ownFilters.dateTo]",{"range":"152","text":"153"},[3442,3444],"[friendDateFrom, friendDateTo, match.path, ownFilters.dateFrom, ownFilters.dateTo]"]